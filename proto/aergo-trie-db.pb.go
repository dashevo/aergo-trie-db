// Code generated by protoc-gen-go. DO NOT EDIT.
// source: aergo-trie-db.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateTrieRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTrieRequest) Reset()         { *m = CreateTrieRequest{} }
func (m *CreateTrieRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTrieRequest) ProtoMessage()    {}
func (*CreateTrieRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_943663e755b2f6bc, []int{0}
}

func (m *CreateTrieRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTrieRequest.Unmarshal(m, b)
}
func (m *CreateTrieRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTrieRequest.Marshal(b, m, deterministic)
}
func (m *CreateTrieRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTrieRequest.Merge(m, src)
}
func (m *CreateTrieRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTrieRequest.Size(m)
}
func (m *CreateTrieRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTrieRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTrieRequest proto.InternalMessageInfo

type CreateTrieResponse struct {
	Trie                 string   `protobuf:"bytes,1,opt,name=trie,proto3" json:"trie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTrieResponse) Reset()         { *m = CreateTrieResponse{} }
func (m *CreateTrieResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTrieResponse) ProtoMessage()    {}
func (*CreateTrieResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_943663e755b2f6bc, []int{1}
}

func (m *CreateTrieResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTrieResponse.Unmarshal(m, b)
}
func (m *CreateTrieResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTrieResponse.Marshal(b, m, deterministic)
}
func (m *CreateTrieResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTrieResponse.Merge(m, src)
}
func (m *CreateTrieResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTrieResponse.Size(m)
}
func (m *CreateTrieResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTrieResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTrieResponse proto.InternalMessageInfo

func (m *CreateTrieResponse) GetTrie() string {
	if m != nil {
		return m.Trie
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateTrieRequest)(nil), "CreateTrieRequest")
	proto.RegisterType((*CreateTrieResponse)(nil), "CreateTrieResponse")
}

func init() { proto.RegisterFile("aergo-trie-db.proto", fileDescriptor_943663e755b2f6bc) }

var fileDescriptor_943663e755b2f6bc = []byte{
	// 127 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x4c, 0x2d, 0x4a,
	0xcf, 0xd7, 0x2d, 0x29, 0xca, 0x4c, 0xd5, 0x4d, 0x49, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57,
	0x12, 0xe6, 0x12, 0x74, 0x2e, 0x4a, 0x4d, 0x2c, 0x49, 0x0d, 0x29, 0xca, 0x4c, 0x0d, 0x4a, 0x2d,
	0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0xd2, 0xe0, 0x12, 0x42, 0x16, 0x2c, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e,
	0x15, 0x12, 0xe2, 0x62, 0x01, 0xe9, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x8d,
	0x5c, 0xb8, 0xb8, 0x1d, 0x41, 0xa6, 0x82, 0x14, 0xba, 0x38, 0x09, 0x99, 0x72, 0x71, 0x25, 0xc3,
	0x35, 0x0a, 0x09, 0xe9, 0x61, 0x18, 0x2d, 0x25, 0xac, 0x87, 0x69, 0x72, 0x12, 0x1b, 0xd8, 0x2d,
	0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x25, 0x28, 0x92, 0x6c, 0xa2, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AergoTrieDBClient is the client API for AergoTrieDB service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AergoTrieDBClient interface {
	CreateTrie(ctx context.Context, in *CreateTrieRequest, opts ...grpc.CallOption) (*CreateTrieResponse, error)
}

type aergoTrieDBClient struct {
	cc *grpc.ClientConn
}

func NewAergoTrieDBClient(cc *grpc.ClientConn) AergoTrieDBClient {
	return &aergoTrieDBClient{cc}
}

func (c *aergoTrieDBClient) CreateTrie(ctx context.Context, in *CreateTrieRequest, opts ...grpc.CallOption) (*CreateTrieResponse, error) {
	out := new(CreateTrieResponse)
	err := c.cc.Invoke(ctx, "/AergoTrieDB/createTrie", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AergoTrieDBServer is the server API for AergoTrieDB service.
type AergoTrieDBServer interface {
	CreateTrie(context.Context, *CreateTrieRequest) (*CreateTrieResponse, error)
}

// UnimplementedAergoTrieDBServer can be embedded to have forward compatible implementations.
type UnimplementedAergoTrieDBServer struct {
}

func (*UnimplementedAergoTrieDBServer) CreateTrie(ctx context.Context, req *CreateTrieRequest) (*CreateTrieResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTrie not implemented")
}

func RegisterAergoTrieDBServer(s *grpc.Server, srv AergoTrieDBServer) {
	s.RegisterService(&_AergoTrieDB_serviceDesc, srv)
}

func _AergoTrieDB_CreateTrie_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTrieRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AergoTrieDBServer).CreateTrie(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AergoTrieDB/CreateTrie",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AergoTrieDBServer).CreateTrie(ctx, req.(*CreateTrieRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AergoTrieDB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AergoTrieDB",
	HandlerType: (*AergoTrieDBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createTrie",
			Handler:    _AergoTrieDB_CreateTrie_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "aergo-trie-db.proto",
}
